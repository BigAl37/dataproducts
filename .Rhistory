hist(simMean, breaks = 8)
abline(v = theoreticalMean, col = "blue")
text(theoreticalMean + .2, - 5, "Theoretical Mean")
abline(v = mean(simMean), col = "red")
text(mean(simMean), - 5.9, "Sample Mean")
hist(simVar, breaks = 8)
abline(v = theoreticalSD, col = "blue", width = 3)
text(theoreticalVar-2, -5, "Theoretical Variance")
abline(v = mean(simVar), col = "red")
text(mean(simVar), - 5.9, "Sample Mean")
hist(simVar, breaks = 8)
abline(v = theoreticalSD, col = "blue", width = 3)
text(theoreticalVar-2, -5, "Theoretical Variance")
abline(v = mean(simVar), col = "red")
text(mean(simVar), - 5.9, "Sample Variance")
hist(simVar, breaks = 8)
abline(v = theoreticalVar, col = "blue", width = 3)
text(theoreticalVar-2, -5, "Theoretical Variance")
abline(v = mean(simVar), col = "red")
text(mean(simVar), - 5.9, "Sample Variance")
hist(simMean, breaks = 13)
abline(v = theoreticalMean, col = "blue")
text(theoreticalMean + .2, - 5, "Theoretical Mean")
abline(v = mean(simMean), col = "red")
text(mean(simMean), - 5.9, "Sample Mean")
text(theoreticalMean + .2, - 4, "Theoretical Mean")
text(theoreticalMean + .2, - 2, "Theoretical Mean")
text(mean(simMean), - 2, "Sample Mean")
hist(simVar, breaks = 8)
abline(v = theoreticalVar, col = "blue", width = 3)
text(theoreticalVar-2, -5, "Theoretical Variance")
abline(v = mean(simVar), col = "red")
hist(simVar, breaks = 13)
hist(simVar, breaks = 13)
hist(simVar, breaks = 21)
abline(v = theoreticalVar, col = "blue", width = 3)
text(theoreticalVar-2, -5, "Theoretical Variance")
abline(v = mean(simVar), col = "red")
text(mean(simVar), - 5.9, "Sample Variance")
hist(simVar, breaks = 21)
abline(v = theoreticalVar, col = "blue", width = 3)
text(theoreticalVar-2, -2, "Theoretical Variance")
abline(v = mean(simVar), col = "red")
text(mean(simVar), - 2, "Sample Variance")
abline(v = mean(simMean), col = "red")
hist(simMean, breaks = 13)
abline(v = theoreticalMean, col = "blue")
text(theoreticalMean + .2, - 2, "Theoretical Mean")
abline(v = mean(simMean), col = "red")
text(mean(simMean), - 2, "Sample Mean")
---
title: "Final Assignment Part 2"
author: "BigAl37"
date: "14 February 2016"
output: pdf_document
---
```{r}
## Load Tooth Data
data("ToothGrowth")
tg <- ToothGrowth
## Initial Exploratory Data Analysis
summary(tg); head(tg, 15); names(tg); str(tg); dim(tg)
table(tg$dose, tg$supp)
## Exploratory boxplot where we can see  that the Orange Juice Median is
## larger than the vitamin C supplement. However, the Vitaminc C range is
## more extreme.
```
```{r, echo=FALSE }
boxplot(tg[tg$supp == "OJ", ]$len, tg[tg$supp == "VC",]$len, main = "Exploratory Boxplot", xlab = "Supplement Type", ylab = "Tooth Length", names = c("OJ","VC"))
```
```{r}
##Split data to perform hypothesis testing
oj5 <- subset(tg, supp == "OJ" & dose == 0.5)
oj10 <- subset(tg, supp == "OJ" & dose == 1.0)
oj20 <- subset(tg, supp == "OJ" & dose == 2.0)
vc5 <- subset(tg, supp == "VC" & dose == 0.5)
vc10 <- subset(tg, supp == "VC" & dose == 1.0)
vc20 <- subset(tg, supp == "VC" & dose == 2.0)
## Here we calculate the t distribution that we will use to accept or reject
## the H0 hypothesis with an alpha of 0.05
qt(0.95, 15)
## Hypothesis testing
## We want to check whether one of the two types and dosages is larger than
## the other. In this case my hypothesis is, does Orange Juice with the same
## dosage as Vitamin C Supplements produce teeth with a larger length?
### Since the t-test is larger than the t distribution and the p-value is
### smaller than our alpha, therefore we reject the null hypothesis and
### conclude that the alternative hypothesis is correct
t.test(oj5$len - vc5$len, paired = F, alternative = "greater")
t.test(oj5$len,vc5$len, paired = F, alternative = "greater")
t.test(oj10$len - vc10$len, paired = F, alternative = "greater")
t.test(oj10$len, vc10$len, paired = F, alternative = "greater")
install.packages("cacher")
?bz2
??bz2
downloadURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
zipFile <- "repdataStormData.csv.bz2"
download.file(downloadURL, destfile = zipFile)
download.file(downloadURL, destfile = zipFile)
unzip(zipFile)
library(magrittr)
read.csv2(header = TRUE, sep = ",")
stormData1 <- bzfile(zipFile) %>%
read.csv2(header = TRUE, sep = ",")
head(stormData1)
setwd("~/desktop/RData")
library(magrittr)
downloadURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
zipFile <- "repdataStormData.csv.bz2"
stormData1 <- download.file(downloadURL, destfile = zipFile) %>%
bzfile() %>%
read.csv2(header = TRUE, sep = ",")
download.file(downloadURL, destfile = zipFile)
stormData1 <- bzfile(zipFile) %>%
read.csv2(header = TRUE, sep = ",")
head(stormData1)
max(stormData1$FATALITIES)
max(as.numeric(stormData1$FATALITIES))
max(as.numeric(stormData1$INJURIES))
library(dplyr)
?group_by
by_EVTYPE <- group_by(stormData1, EVTYPE)
by_EVTYPE
by_EVTYPE$INJURIES
head(by_EVTYPE)
stormData2 <- as.data.frame(stormData1)
str(stormData2)
?select
stormData2 <- stormData1[, EVTYPE:IJURIES]
stormData2 <- stormData1[, c("EVTYPE","FATALITIES","INJURIES")]
str(stormData2)
head(stormData2)
stormData2[, c("FATALITIES","INJURIES")] <- as.numeric(stormData2[, c("FATALITIES","INJURIES")])
stormData2[, c("FATALITIES","INJURIES")] <- as.numeric(stormData2[, c("FATALITIES","INJURIES")])
stormData2[, c("FATALITIES","INJURIES")] <- as.double(stormData2[, c("FATALITIES","INJURIES")])
as.data.frame()
stormData2 <- as.data.frame(stormData1[, c("EVTYPE","FATALITIES","INJURIES")])
stormData2[, c("FATALITIES","INJURIES")] <- as.double(stormData2[, c("FATALITIES","INJURIES")])
stormData2[, c("FATALITIES","INJURIES")] <- as.double(unlist(stormData2[, c("FATALITIES","INJURIES")]))
head(stormData2)
str(stormData2)
stormData2 <- stormData1[, c("EVTYPE","FATALITIES","INJURIES")]
stormData2[, c("FATALITIES","INJURIES")] <- as.numeric(unlist(stormData2[, c("FATALITIES","INJURIES")]))
head(stormData2)
str(stormData2)
stormData2 <- stormData1[, c("EVTYPE","FATALITIES","INJURIES")]
stormData2[, c("FATALITIES","INJURIES")] <- unlist(stormData2[, c("FATALITIES","INJURIES")]) %>%
as.numeric()
head(stormData2)
str(stormData2)
by_EVTYPE <- group_by(stormData2, EVTYPE)
by_EVTYPE
sum(by_EVTYPE)
?group_by
summarise(by_EVTYPE, n = sum(n))
summarise(by_EVTYPE)
table(by_EVTYPE)
?"tabulate"
?"dplyr"
?dplyr
summarise(by_EVTYPE, sum(FATALITIES), sum(INJURIES))
by_EVTYPESum <- group_by(stormData2, EVTYPE) %>%
summarise(sum(FATALITIES), sum(INJURIES))
by_EVTYPESum
plot(by_EVTYPESum)
boxplot(by_EVTYPESum)
boxplot(by_EVTYPESum$EVTYPE, by_EVTYPESum$`sum(FATALITIES)`)
by_EVTYPESum
by_EVTYPESum
plot(by_EVTYPESum$EVTYPE, by_EVTYPESum$`sum(FATALITIES)`)
max(by_EVTYPESum$`sum(FATALITIES)`)
by_EVTYPESum[max(by_EVTYPESum$`sum(FATALITIES)`),]
by_EVTYPESum[by_EVTYPESum$`sum(FATALITIES)` == max(by_EVTYPESum$`sum(FATALITIES)`),]
by_EVTYPESum <- group_by(stormData2, EVTYPE)
boxplot(by_EVTYPE)
boxplot(by_EVTYPE$EVTYPE, by_EVTYPE$FATALITIES)
boxplot(stormData2$EVTYPE,stormData2$FATALITIES)
boxplot(stormData2$EVTYPE,stormData2$FATALITIES)
?boxplot
boxplot(stormData2$EVTYPE ~stormData2$FATALITIES)
boxplot(stormData2$FATALITIES ~ stormData2$EVTYPE)
?PLOT
?plot
unique(stormData1$EVTYPE)
?cbind
stormData3 <- stormData2 %>%
cbind(TOTAL = FATALITIES + INJURIES)
cbind(TOTAL = "FATALITIES" + "INJURIES")
cbind(stormData2, TOTAL = FATALITIES + INJURIES)
stormData3 <- stormData2 %>%
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES)
stormData3
?sort
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES, desc)
stormData3 <- stormData2 %>%
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES, desc)
?cbind
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES)
stormData3 <- stormData2 %>%
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES)
desc(stormData3$TOTAL)
stormData3$TOTAL
sort(stormData3, decreasing = TRUE)
sort(stormData3$TOTAL, decreasing = TRUE)
stormdata3[sort(stormData3$TOTAL, decreasing = TRUE), ]
stormData3[sort(stormData3$TOTAL, decreasing = TRUE), ]
stormData3[TOTAL == sort(stormData3$TOTAL, decreasing = TRUE), ]
stormData3["TOTAL" == sort(stormData3$TOTAL, decreasing = TRUE), ]
stormData3[stormData3$TOTAL == sort(stormData3$TOTAL, decreasing = TRUE), ]
head(stormData3[stormData3$TOTAL == sort(stormData3$TOTAL, decreasing = TRUE), ])
max(stormData3$FATALITIES)
max(stormData3$TOTAL)
sortStormData <- stormData3[stormData3$TOTAL == sort(stormData3$TOTAL, decreasing = TRUE), ]
head(sortStormData)
sortStormData[1,]
sort(stormData3$TOTAL, decreasing = TRUE)
?sort
stormData3[,order(TOTAL)]
stormData3[,order(stormData3$TOTAL)]
stormData3[order(stormData3$TOTAL),]
head(stormData3[order(stormData3$TOTAL),])
head(stormData3[order(stormData3$TOTAL), desc = T])
head(stormData3[order(stormData3$TOTAL, desc = T), ])
head(stormData3[order(stormData3$TOTAL, decreasing = T), ])
stormData1 <- bzfile(zipFile) %>%
read.csv2(header = TRUE, sep = ",")
stormData2 <- stormData1[, c("EVTYPE","FATALITIES","INJURIES")]
stormData2[, c("FATALITIES","INJURIES")] <- unlist(stormData2[, c("FATALITIES","INJURIES")]) %>%
as.numeric()
stormData3 <- stormData2 %>%
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES)
sort(stormData3$TOTAL, decreasing = TRUE)
head(stormData3[order(stormData3$TOTAL, decreasing = T), ])
downloadURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
zipFile <- "repdataStormData.csv.bz2"
stormData1 <- bzfile(zipFile) %>%
read.csv2(header = TRUE, sep = ",")
stormData2 <- stormData1[, c("EVTYPE","FATALITIES","INJURIES")]
stormData2[, c("FATALITIES","INJURIES")] <- unlist(stormData2[, c("FATALITIES","INJURIES")]) %>%
as.numeric()
stormData3 <- stormData2 %>%
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES)
sort(stormData3$TOTAL, decreasing = TRUE)
head(stormData3[order(stormData3$TOTAL, decreasing = T), ])
library(magrittr)
library(dplyr)
stormData1 <- bzfile(zipFile) %>%
read.csv2(header = TRUE, sep = ",")
stormData2 <- stormData1[, c("EVTYPE","FATALITIES","INJURIES")]
stormData2[, c("FATALITIES","INJURIES")] <- unlist(stormData2[, c("FATALITIES","INJURIES")]) %>%
as.numeric()
stormData3 <- stormData2 %>%
cbind(TOTAL = stormData2$FATALITIES + stormData2$INJURIES)
sort(stormData3$TOTAL, decreasing = TRUE)
head(stormData3[order(stormData3$TOTAL, decreasing = T), ])
stormAnalysis <- stormData3[1:10,]
head(stormAnalysis)
stormAnalysis <- stormData3[order(stormData3$TOTAL, decreasing = T),]
stormAnalysis <- stormAnalysis[1:10,]
head(stormAnalysis)
boxplot(EVTYPE ~ TOTAL, data = stormAnalysis)
boxplot(EVTYPE ~ TOTAL, data = stormAnalysis)
boxplot(TOTAL ~ EVTYPE, data = stormAnalysis)
pie(TOTAL ~ EVTYPE, data = stormAnalysis)
pie(TOTAL,EVTYPE, data = stormAnalysis)
stormAnalysis
pie(TOTAL, EVTYPE, data = stormAnalysis)
?pie
pie(TOTAL, labels = EVTYPE, data = stormAnalysis)
?tapply
?aggregate
aggregate(stormData3$TOTAL, by = stormData3$EVTYPE, sum)
aggregate(stormData3$TOTAL, by = list(stormData3$EVTYPE), sum)
stormEvtypeTotal <- aggregate(stormData3$TOTAL, by = list(stormData3$EVTYPE), sum)
names(stormEvtypeTotal) <- c("EVTYPE", "TOTAL")
head(stormEvtypeTotal)
head(stormEvtypeTotal[order(stormEvtypeTotal$TOTAL, decreasing = TRUE)])
head(stormEvtypeTotal[order(stormEvtypeTotal$TOTAL, decreasing = TRUE),])
stormEvtypeTotalTop3 <- stormEvtypeTotal[order(stormEvtypeTotal$TOTAL, decreasing = TRUE),]
stormEvtypeTotalTop3 <- stormEvtypeTotal[order(stormEvtypeTotal$TOTAL, decreasing = TRUE),] %>% [1:10]
stormEvtypeTotalTop3 <- stormEvtypeTotalTop3[1:3]
stormEvtypeTotalTop3 <- stormEvtypeTotalTop3[1:3,]
stormEvtypeTotalTop3
?barplot
?plot
?bar
barplot(stormEvtypeTotalTop3$TOTAL, col = list(stormEvtypeTotalTop3$EVTYPE))
barplot(stormEvtypeTotalTop3$TOTAL, legend = list(stormEvtypeTotalTop3$EVTYPE))
barplot(stormEvtypeTotalTop3$TOTAL, legend = stormEvtypeTotalTop3$EVTYPE)
barplot(stormEvtypeTotalTop3$TOTAL, col = c("red", "blue", "yellow") legend = stormEvtypeTotalTop3$EVTYPE)
barplot(stormEvtypeTotalTop3$TOTAL, col = c("red", "blue", "yellow") legend = stormEvtypeTotalTop3$EVTYPE)
barplot(stormEvtypeTotalTop3$TOTAL, col = c("red", "blue", "yellow"), legend = stormEvtypeTotalTop3$EVTYPE)
stormEvtypeTotalTop3 <- stormEvtypeTotal[order(stormEvtypeTotal$TOTAL, decreasing = TRUE),] %>% stormEvtypeTotal[1:3,]
if(!exists(zipFile))
{
download.file(downloadURL, destfile = zipFile)
} else
{
stormData1 <- bzfile(zipFile) %>%
read.csv2(header = TRUE, sep = ",")
}
if(exists(zipFile))
{
download.file(downloadURL, destfile = zipFile)
} else
{
stormData1 <- bzfile(zipFile) %>%
read.csv2(header = TRUE, sep = ",")
}
if(exists(zipFile))
{
1
} else
{
0
}
zipFile
stormData2 <- stormData1[, c("EVTYPE","FATALITIES","INJURIES")]
exists(zipFile)
if(file.exists(zipFile))
{
1
} else
{
0
}
if(!file.exists(zipFile))
{
1
} else
{
0
}
?barplot
table(stormEvtypeTotal)
table(stormEvtypeTotalTop3)
table(stormEvtypeTotalTop3)
stormEvtypeTotalTop3
head(stormEvtypeTotalTop3)
head(stormData1)
stormData4 <- stormData1[, c("EVTYPE","PROPDMG", "CROPDMG")]
stormData4 <- stormData1[, c("EVTYPE","PROPDMG", "CROPDMG")]
stormData4[, c("FATALITIES","INJURIES")] <- unlist(
stormData4[, c("PROPDMG","CROPDMG")]) %>%
as.numeric()
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormEvtypeTotalEcon <- aggregate(stormData5$TOTAL,
by = list(stormData5$EVTYPE), sum)
names(stormEvtypeTotalEcon) <- c("EVTYPE", "TOTAL")
stormEvtypeTotalTop3Econ <- stormEvtypeTotalEcon[order(stormEvtypeTotalEcon$TOTAL, decreasing = TRUE),]
stormEvtypeTotalTop3Econ <- stormEvtypeTotalTop3Econ[1:3,]
stormEvtypeTotalTop3Econ
stormEvtypeTotalEcon
stormData5
stormData4 <- stormData1[, c("EVTYPE","PROPDMG", "CROPDMG")]
stormData4[, c("PROPDMG","CROPDMG")] <- unlist(
stormData4[, c("PROPDMG","CROPDMG")]) %>%
as.numeric()
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormEvtypeTotalEcon <- aggregate(stormData5$TOTAL,
by = list(stormData5$EVTYPE), sum)
names(stormEvtypeTotalEcon) <- c("EVTYPE", "TOTAL")
stormEvtypeTotalTop3Econ <- stormEvtypeTotalEcon[order(stormEvtypeTotalEcon$TOTAL, decreasing = TRUE),]
stormEvtypeTotalTop3Econ <- stormEvtypeTotalTop3Econ[1:3,]
stormEvtypeTotalTop3Econ
stormEvtypeTotalEcon
stormData5
stormData4
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormData4[, c("PROPDMG","CROPDMG")] <- unlist(
stormData4[, c("PROPDMG","CROPDMG")]) %>%
as.numeric()
stormData4
View(stormData4)
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormData5
rm(stormData5)
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormData5
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormData5 <- stormData4
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
cbind(TOTAL = stormData4$PROPDMG + stormData2$CROPDMG)
stormData5 <- stormData4 %>%
cbind(TOTAL = stormData4$PROPDMG + stormData4$CROPDMG)
stormEvtypeTotalEcon <- aggregate(stormData5$TOTAL,
by = list(stormData5$EVTYPE), sum)
names(stormEvtypeTotalEcon) <- c("EVTYPE", "TOTAL")
stormEvtypeTotalTop3Econ <- stormEvtypeTotalEcon[order(stormEvtypeTotalEcon$TOTAL, decreasing = TRUE),]
stormEvtypeTotalTop3Econ <- stormEvtypeTotalTop3Econ[1:3,]
stormEvtypeTotalTop3Econ
?barplot
method(mean)
library(methods)
methods(mean)
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?"shiny"
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(shiny)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
library(devtools)
setAccountInfo
?setAccountInfo
library(rsconnect)
setAccountInfo(name='bigal37',
token='D3B152FDFEE18A5DE4DEAC40141F4B95',
secret='ImAs1M4o9Ed+QQJk3BbL1Ech2HymnbycQjEmrrWx')
shiny::runApp()
setAccountInfo(name='bigal37',
token='D3B152FDFEE18A5DE4DEAC40141F4B95',
secret='ImAs1M4o9Ed+QQJk3BbL1Ech2HymnbycQjEmrrWx')
shiny::runApp()
library(rsconnect)
setAccountInfo(name='bigal37',
token='D3B152FDFEE18A5DE4DEAC40141F4B95',
secret='ImAs1M4o9Ed+QQJk3BbL1Ech2HymnbycQjEmrrWx')
shiny::runApp()
library(rsconnect)
setAccountInfo(name='bigal37',
token='D3B152FDFEE18A5DE4DEAC40141F4B95',
secret='ImAs1M4o9Ed+QQJk3BbL1Ech2HymnbycQjEmrrWx')
shiny::runApp()
library(rsconnect)
setAccountInfo(name='bigal37',
token='D3B152FDFEE18A5DE4DEAC40141F4B95',
secret='ImAs1M4o9Ed+QQJk3BbL1Ech2HymnbycQjEmrrWx')
shiny::runApp()
library(rsconnect)
library(shiny)
library(devtools)
deployApp(appDir = "C:/Users/Al/Documents/desktop/RData/BMIIndexCalculator")
library(slidify)
author("BMIIndexCalculator")
mode        :
)
framework   : io2012
author("first_deck")
title       :
)
author      :
)
